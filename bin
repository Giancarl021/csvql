#!/usr/bin/env node

const args = require('yargs').argv;
const Haikunator = require('haikunator');
const cli = require('./src/cli');
const csvql = require('./index');
const path = require('path');
const fs = require('fs');

const dataPath = path.resolve(__dirname, 'data');
const tempPath = path.resolve(__dirname, 'temp');

if (!fs.existsSync(dataPath)) {
    fs.mkdirSync(dataPath);
}

if (!fs.existsSync(tempPath)) {
    fs.mkdirSync(tempPath);
}

const files = args._;
const haikunator = new Haikunator();

const persist = (args.hasOwnProperty('persist') || args.hasOwnProperty('p')) ?
    path.resolve(
        __dirname,
        'data',
        (typeof args.p !== 'boolean' && args.persist !== 'boolean' && !String(args.p || args.persist).includes('/') ?
        (args.p || args.persist) :
        haikunator.haikunate()) + '.sqlite'
    ) :
    false;

const from = args.from || args.f ?
    (path.isAbsolute(args.from || args.f) ?
    args.from || args.f :
    path.resolve(__dirname, 'data', args.from || args.f + '.sqlite')) :
    null;

const disk = args.disk || args.D ?
    path.resolve(__dirname, 'temp', `${Date.now()}.sqlite`) :
    null;

const verbose = args.verbose;
const parseCommaAsDecimal = args.N || args['parse-number-commas'];

async function main() {
    const instance = await csvql(files, { persist, from, disk, parseCommaAsDecimal });

    if(from) {
        console.log('Importing session from: ' + from);
    } else if (persist) {
        console.log('The session will be saved on: ' + persist);
    }

    cli(instance);
}

main().catch(err => {
    if(verbose) console.error(err);
    else console.error('Runtime Error: ' + err.message);
    process.exit(1);
});